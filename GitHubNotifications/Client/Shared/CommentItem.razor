<div class="list-group-item">
    <div>
        <a href="@Comment.uri">@Comment.title</a><br />
        <strong>@at@Comment.author</strong> -
        @if (@Comment.created.Day == DateTime.Now.Day)
        {
            @Comment.created.ToString("h:mm tt")
        }
        else
        {
            @Comment.created.ToString("M/dd h:mm tt")
        }
    </div>
    &nbsp;@FromMarkdown(Comment.body)
    @if (Comment.replies?.Count > 0)
    {
        <div class="list-group" style="max-width: inherit; overflow-wrap: anywhere;">
            @foreach (var reply in Comment.replies.OrderBy(c => c.created))
            {
                <div class="list-group-item">
                    <div>
                        <strong>@at@reply.author</strong> -
                        @if (@reply.created.Day == DateTime.Now.Day)
                        {
                            @reply.created.ToString("h:mm tt")
                        }
                        else
                        {
                            @reply.created.ToString("M/dd h:mm tt")
                        }
                    </div>
                    &nbsp;@FromMarkdown(reply.body)
                </div>
            }
        </div>
    }
</div>

@code {

    [Parameter]
    public Comment Comment { get; set; }

    private string at = "@";
    private MarkupString FromMarkdown(string s)
    {
        var pipeline = new MarkdownPipelineBuilder().UseAdvancedExtensions().Build();
        return new MarkupString(Markdown.ToHtml(s, pipeline));
    }
}